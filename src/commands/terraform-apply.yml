description: "Run `terraform apply`."

parameters:
  plan:
    type: string
    default: "teak-orb-terraform.plan"

  plan_log:
    type: string
    default: "teak-orb-terraform.plan.log"

  path:
    type: string
    default: "/tmp/teak-orb-terraform"

  dry_run:
    type: boolean
    default: false

  workspace:
    type: string
    description: Name of the terraform workspace
    default: ""

steps:
  - run:
      name: Prepare attach_workspace
      command: mkdir -p << parameters.path >>
  - attach_workspace:
      at: << parameters.path >>
  - unless:
      condition: << parameters.dry_run >>
      steps:
        - run:
            name: Terraform Apply
            command: |
              readonly workspace_parameter="<< parameters.workspace >>"
              readonly workspace="${TF_WORKSPACE:-$workspace_parameter}"
              export workspace
              unset TF_WORKSPACE

              if [[ $workspace_parameter != "" ]]; then
                echo "[INFO] Provisioning workspace: $workspace"
                ./terraform/terraform workspace select -no-color "$workspace" || terraform workspace new -no-color "$workspace"
              else
                echo "[INFO] Using default workspace"
              fi

              ./terraform/terraform apply -auto-approve << parameters.path >>/<< parameters.plan >>
  - when:
      condition: << parameters.dry_run >>
      steps:
        - run:
            name: Terraform Apply (Dry Run)
            command: |
              ./terraform/terraform show << parameters.path >>/<< parameters.plan >>
