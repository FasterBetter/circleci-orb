description: >
  Run packer build

docker:
  - image: cimg/base:2021.04

parameters:
  version:
    description: "Version of packer to use"
    type: string
    default: "1.7.4"

  platform:
    description: "Platform packer will run on"
    type: string
    default: "linux_amd64"

  github_releases_user:
    type: string
    default: ""
    description: >
      If set, instead of downloading from releases.hashicorp.com, will
      download from a Github release for the specified user

  gpg_key_id:
    type: string
    default: "72D7468F"
    description: The fingerprint of the GPG key used to sign the release.

  gpg_keyserver:
    type: string
    default: "keyserver.ubuntu.com"
    description: "The keyserver to retrieve the GPG key from"

  path:
    type: "string"
    description: "Path to the packer module"
    default: "."

  out_path:
    type: string
    default: "/tmp/teak-orb-packer"
    description: "Path log will be stored in"

  out_log:
    type: string
    default: "teak-orb-packer.build.log"
    description: "Name of the file the build log should be stored in."

  only:
    type: string
    description: "Specific list of builders to run"
    default: ""

  except:
    type: string
    description: "List of builders to omit"
    default: ""

  artifact_path:
    type: string
    description: "If set, will upload all files at the path as job artifacts"
    default: ""

  var:
    default: ''
    description: "Comma separated list of vars to set, e.g. 'foo=bar,baz=boo'"
    type: string


steps:
  - checkout
  - packer-install:
      version: << parameters.version >>
      platform: << parameters.platform >>
      github_releases_user: << parameters.github_releases_user >>
      gpg_key_id: << parameters.gpg_key_id >>
      gpg_keyserver: << parameters.gpg_keyserver >>
  - packer-init:
      path: << parameters.path >>
  - packer-build:
      out_log: << parameters.out_log >>
      out_path: << parameters.out_path >>
      path: << parameters.path >>
      only: << parameters.only >>
      except: << parameters.except >>
      artifact_path: << parameters.artifact_path >>
      var: << parameters.var >>
