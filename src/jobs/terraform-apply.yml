description: >
  Run terraform apply, using a planfile from a prior terrafrom plan.

docker:
  - image: cimg/base:2021.04

parameters:
  version:
    description: "Version of terraform to use"
    type: string
    default: "1.0.5"

  platform:
    description: "Platform terraform will run on"
    type: string
    default: "linux_amd64"

  github_releases_user:
    type: string
    default: ""
    description: >
      If set, instead of downloading from releases.hashicorp.com, will
      download from a Github release for the specified user

  gpg_key_id:
    type: string
    default: "72D7468F"
    description: The fingerprint of the GPG key used to sign the release.

  gpg_keyserver:
    type: string
    default: "keyserver.ubuntu.com"
    description: "The keyserver to retrieve the GPG key from"

  path:
    type: "string"
    description: "Path to the terraform module"
    default: "."

  workspace:
    type: "string"
    description: Name of the terraform workspace
    default: ""

  plan:
    type: string
    default: "teak-orb-terraform.tfplan"
    description: "The name of the planfile to apply."

  plan_path:
    type: string
    description: "Path the planfile is stored in. Should be persisted from a terraform-plan job or command."
    default: "/tmp/teak-orb-terraform"

  out_log:
    type: string
    default: "teak-orb-terraform.apply.log"
    description: "Name of the file the apply log should be stored in."

  dry_run:
    type: boolean
    default: false
    description: "When true will show what apply would have done, but will not run apply."

  continuation_cache:
    type: "string"
    description: "The cache key the plan was stored in for continuations (https://circleci.com/developer/orbs/orb/circleci/continuation)"
    default: ""

steps:
  - checkout
  - terraform-install:
      version: << parameters.version >>
      platform: << parameters.platform >>
      github_releases_user: << parameters.github_releases_user >>
      gpg_key_id: << parameters.gpg_key_id >>
      gpg_keyserver: << parameters.gpg_keyserver >>
  - terraform-init:
      path: << parameters.path >>
  - run:
      name: Prepare attach_workspace
      command: mkdir -p << parameters.path >>
  - attach_workspace:
      at: << parameters.plan_path >>
  - terraform-apply:
      plan: << parameters.plan >>
      out_log: << parameters.out_log >>
      plan_path: << parameters.plan_path >>
      workspace: << parameters.workspace >>
      path: << parameters.path >>
      dry_run: << parameters.dry_run >>
      continuation_cache: << parameters.continuation_cache >>
